---  
- name: Label cluster with one node
  when: cluster_hosts | length == 1
  shell: "{{ item }}"
  with_items:
    - kubectl label --overwrite=true nodes {{ ansible_hostname }} appstore=yes
    - kubectl label --overwrite=true nodes {{ ansible_hostname }} prometheus=yes
    - kubectl label --overwrite=true nodes {{ ansible_hostname }} mysql=yes
    - kubectl label --overwrite=true nodes {{ ansible_hostname }} elasticsearch=yes

- set_fact:
    worker_nodes="[]"
  when: cluster_hosts | length == 1

- name: Get worker nodes of multi-nodes cluster
  when: cluster_hosts | length  > 1
  shell: |
    kubectl get nodes -l kubeadm.alpha.kubernetes.io/role!=master \
        -o jsonpath='{.items[*].status.addresses[?(@.type=="Hostname")].address}'
  register: worker_nodes_result
  until: worker_nodes_result.stdout != ""
  retries: 20
  delay: 15

- set_fact:
    worker_nodes={{ worker_nodes_result.stdout.split(" ") }}
  when: cluster_hosts | length  > 1

- name: Label cluster with one worker node
  when: worker_nodes | length == 1
  shell: "{{ item }}"
  with_items:
    - kubectl label --overwrite=true nodes {{ worker_nodes[0] }} appstore=yes
    - kubectl label --overwrite=true nodes {{ worker_nodes[0] }} prometheus=yes
    - kubectl label --overwrite=true nodes {{ worker_nodes[0] }} mysql=yes
    - kubectl label --overwrite=true nodes {{ worker_nodes[0] }} elasticsearch=yes

- name: Label cluster with multi-worker nodes
  when: worker_nodes | length > 1
  shell: "{{ item }}"
  with_items:
    - kubectl label --overwrite=true nodes {{ worker_nodes[0] }} appstore=yes
    - kubectl label --overwrite=true nodes {{ worker_nodes[0] }} elasticsearch=yes
    - kubectl label --overwrite=true nodes {{ worker_nodes[1] }} prometheus=yes
    - kubectl label --overwrite=true nodes {{ worker_nodes[1] }} mysql=yes

