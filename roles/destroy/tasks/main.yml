---
- name: Destroy GlusterFS
  shell: |
    {{ kube_glusterfs_dir }}/gk-deploy -gy abort {{ kube_glusterfs_dir }}/topology.json
  delegate_to: "{{ master_hosts[0] }}"
  async: 60
  poll: 5
  ignore_errors: True

- name: Reset kubeadm
  shell: |
    kubeadm reset
  ignore_errors: True

- name: Remove kubeadm
  when: ansible_os_family == "RedHat"
  yum: name={{item}} state=removed
  with_items:
    - kubectl
    - kubeadm
    - kubelet
    - kubernetes-cni
  ignore_errors: True

- name: Clear versionlock
  when: ansible_os_family == "RedHat"
  shell: |
    yum versionlock clear
  ignore_errors: True

- name: Remove kubeadm
  when: ansible_os_family == "Debian"
  apt: name={{item}} state=removed
  with_items:
    - kubectl
    - kubeadm
    - kubelet
    - kubernetes-cni
  ignore_errors: True

- name: Unhold kubernetes packages
  when: ansible_os_family == "Debian"
  shell: |
    apt-mark unhold kubectl kubelet kubernetes-cni kubeadm
  ignore_errors: True

- name: Stop and remove etcd cluster
  shell: |
    docker stop etcd
    docker rm etcd
  ignore_errors: True
  when: "'masters' in group_names"

- name: Remove keepalived
  yum: name={{item}} state=removed
  with_items:
    - keepalived
  ignore_errors: True

- name: Remove data directory
  file: path={{item}} state=absent
  with_items:
    - /var/lib/kubelet
    - /etc/kubernetes
    - /var/etcd
    - /var/lib/etcd
    - /usr/db_data
    - /var/run/calico
    - /etc/systemd/system/kubelet.service.d/
    - /etc/keepalived
  ignore_errors: True
  
- name: Umount ECP share directory
  shell: |
    umount {{ ecp_share_dir }}
  ignore_errors: True
  
- name: Remove ECP share directory
  file: path={{item}} state=absent
  with_items:
    - "{{ ecp_share_dir }}"
  ignore_errors: True

- name: Remove GlusterFS directory
  file: path={{item}} state=absent
  with_items:
    - /etc/glusterfs 
    - /var/lib/glusterd
    - /var/lib/heketi
  ignore_errors: True

- name: Get GlusterFS volumes
  shell: "pvs | grep vg_"
  register: vgs_result
  ignore_errors: True

- name: Remove pvs and vgs
  shell: "vgremove -f {{ item.strip().split()[1] }} && pvremove -f {{ item.strip().split()[0] }}"
  with_items:
    - "{{ vgs_result.stdout_lines }}"
  ignore_errors: True

- name: Remove glusterfs client
  when: ansible_os_family == "RedHat"
  yum: name={{item}} state=removed
  with_items:
    - glusterfs-client
  ignore_errors: True

- name: Remove glusterfs client
  when: ansible_os_family == "Debian"
  apt: name={{item}} state=removed
  with_items:
    - glusterfs-client
  ignore_errors: True

- name: Flush IP tables
  iptables:
    table: nat
    flush: true
  ignore_errors: True
    
- name: Restart docker services
  systemd:
    state: restarted
    name: docker
    daemon_reload: yes

