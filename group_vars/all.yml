---
###########################################################################
# Configuration for yum repository for CentOS 7
yum_k8s_repo: "http://yum.kubernetes.io/repos/kubernetes-el7-x86_64"
yum_kubectl_version: 1.9.5-0
yum_kubelet_version: 1.9.5-0
yum_kubernetes_cni_version: 0.6.0-0
yum_kubeadm_version: 1.9.5-0
yum_docker_repo: "https://download.docker.com/linux/centos/docker-ce.repo"
###########################################################################
# Configuration for apt repository for Ubuntu 16.04
apt_k8s_repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
apt_k8s_key: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
apt_kubectl_version: 1.9.5-00
apt_kubelet_version: 1.9.5-00
apt_kubernetes_cni_version: 0.6.0-00
apt_kubeadm_version: 1.9.5-00
apt_glusterfs_repo: "ppa:gluster/glusterfs-3.8"
############################################################################
# Configuration for etcd
etcd_image_version: rivernet/etcd-amd64:3.1.11
###########################################################################
# Configuration for kubeadm
kubeadm_image_repository: docker.io/rivernet
kube_version: v1.9.5
token: b0f7b8.8d1767876297d85c
###########################################################################
# Configuration for kubelet
kubelet_pod_infra_image: docker.io/rivernet/pause-amd64:3.0
############################################################################
# Configuration for k8s dashboard
k8s_dashboard_image: rivernet/kubernetes-dashboard-amd64:v1.6.3
############################################################################
# Configuration for nginx
nginx_image: rivernet/nginx:1.13.8
############################################################################
# Configuration for glusterfs
# docker pull rivernet/gluster-centos@sha256:5e86156d721ddeaf75972299efd000794cf7bc3da8cbd5aae4ddfd73e36c4534
glusterfs_image: rivernet/gluster-centos:latest
# docker pull rivernet/heketi@sha256:44f5a6c2fd037f06dd74ac52daf67a8633f88f0c1f5419cbeea22872ecc76ba8
heketi_image: rivernet/heketi:dev
############################################################################
# Configuration for networks
calico_etcd_image: rivernet/etcd:v3.1.10
calico_node_image: rivernet/node:v3.0.3
calico_cni_image: rivernet/cni:v2.0.1
calico_policy_controller_image: rivernet/kube-controllers:v2.0.1
flannel_image: rivernet/flannel:v0.9.1-amd64

# Network implementation('flannel', 'calico')
network: calico
pod_network_cidr: 10.254.0.0/16
cni_opts: interface=enp0s8 # flannel: --iface=enp0s8, calico: interface=enp0s8
service_subnet: 10.96.0
service_cidr: "{{ service_subnet }}.0/12"
dns_name: cluster.local
dns_ip: "{{ service_subnet }}.10"
############################################################################
# Configuration for nvidia device plugin
nvidia_device_plugin_image: rivernet/k8s-device-plugin:1.9
############################################################################
# Configuration for required softwares to be installed on all hosts
required_softwares:
  - rsync
  - docker-ce-17.12.1.ce
  - ftp://195.220.108.108/linux/centos/7.4.1708/extras/x86_64/Packages/container-selinux-2.42-1.gitad8f0f7.el7.noarch.rpm
############################################################################
# Configuration for required softwares to be installed on gpu hosts
nvidia_docker:
  - nvidia-docker2-2.0.3-1.docker17.12.1.ce.noarch
  - nvidia-container-runtime-2.0.0-1.docker17.12.1.x86_64
############################################################################
# Configuration for ECP

# ECP - Docker registry
registry_domain: registry.harbor:5000
# ECP - Namespace
ecp_namespace: sky-firmament
# ECP - Appstore
rudder_image: rivernet/rudder:4.2
helm_image: rivernet/helm:v2.2.3
tiller_image: rivernet/tiller:v2.6.2
ecp_charts_url: https://github.com/rivernetio/charts/raw/master/repo/stable
ecp_local_charts_repo: "{{ playbook_dir }}/depends/charts/repo"
# ECP - Logging
canes_image: rivernet/canes:4.2
elasticsearch_image: rivernet/elasticsearch:5.6.4
fluentd_image: rivernet/fluentd-elasticsearch:v2.0.2
kibana_image: rivernet/kibana:5.6.4
elasticsearch_curator_image: rivernet/docker-elasticsearch-curator:5.4.1
# ECP - Events
events_image: rivernet/events:4.2
# ECP - License
license_image: rivernet/license:4.2
# ECP - Lyra
lyra_image: rivernet/lyra:4.2
# ECP - Mysql
mysql_image: rivernet/mysql-sky:4.2
# ECP - Prometheus
grafana_image: rivernet/grafana-sky:4.2
curl_image: rivernet/curl:latest
kubestatemetrics_image: rivernet/kube-state-metrics:v0.5.0
nodeexporter_image: rivernet/node-exporter:0.12.0
kubeapiexporter_image: rivernet/kube-api-exporter:master-2fe5dfb
prometheus_image: rivernet/prometheus:v1.7.2
prometheus_remote_storage_image: rivernet/remote-storage-adapter:4.2
prometheus_adapter_image: rivernet/k8s-prometheus-adapter:v0.2.0-beta.0
nvidia_smi_exporter_image: rivernet/nvidia-smi-exporter:8.0-runtime-ubuntu14.04
# ECP - Pyxis GUI
pyxis_image: rivernet/pyxis:4.2
# ECP - River Websocket
river_image: rivernet/river:4.2
# ECP - Sas Authentication
keystone_image: rivernet/keystone:20161108
sas_image: rivernet/skyform-sas:4.2
# ECP - Harbor Image Repository
harbor_mysql_image: rivernet/harbor-mysql:4.2
harbor_registry_image: rivernet/harbor-registry:4.2
harbor_ui_image: rivernet/harbor-ui:4.2
harbor_proxy_image: rivernet/harbor-proxy:4.2
harbor_docker_image: rivernet/docker:stable-dind
ara_image: rivernet/ara:4.2
# ECP - HybridJob Controller
hybridjob_image: rivernet/hybridjob-controller:4.2
# ECP - Email for alert
email_host: smtp.xxx.com
email_sender: xxx@example.com
email_password: xxxxxx
# ECP - External IP
public_ip: 10.211.64.107

# nginx - NodePorts:
nginx_port: 8443

# ECP - NodePorts:
k8s_dashboard_nodeport: 30080
rudder_nodeport: 32000
canes_nodeport: 30907
elasticsearch_nodeport: 30905
kibana_nodeport: 30906
events_nodeport: 30901
license_nodeport: 32081
lyra_nodeport: 31083
mysql_nodeport: 31036
grafana_nodeport: 31000
kubestatemetrics_nodeport: 30869
prometheus_nodeport: 30900
pyxis_nodeport: 31081
sas_api_nodeport: 31898
sas_http_nodeport: 31899
harbor_http_nodeport: 31095
harbor_http4ecp_nodeport: 31096
harbor_https_nodeport: 31443

# ECP - Appstore Images.  All images must start with docker.io/rivernet
app_images:
  - docker.io/rivernet/tensorflow-serving:4.2
  - docker.io/rivernet/tensorflow:4.3
  - docker.io/rivernet/tensorflow:4.3-gpu
  - docker.io/rivernet/jupyter:4.2
  - docker.io/rivernet/web-vote-app:v0.1
  - docker.io/rivernet/redis:3.0
  - docker.io/rivernet/redis_exporter:v0.14
  - docker.io/rivernet/curl:latest
  - docker.io/rivernet/tomcat:8.0.47-r0
  - docker.io/rivernet/mnist-demo:4.2
  - docker.io/rivernet/mysql:5.7.20
  - docker.io/rivernet/mysqld-exporter:latest
  - docker.io/rivernet/nvidia-smi-exporter:8.0-runtime-ubuntu14.04
  - docker.io/rivernet/gitlab-ce:8.14.4-ce.0
  - docker.io/rivernet/postgres:9.5.4
  - docker.io/rivernet/redis:3.2.6-r2
  - docker.io/rivernet/busybox:1.25.0
  - docker.io/rivernet/bats:0.4.0
  - docker.io/rivernet/jenkins:lts
  - docker.io/rivernet/jnlp-slave:3.10-1

# Harbor registry
insecure_registry: registry.harbor:5000
#############################################################################
# Tain master
taint_master: true
#############################################################################
# Pod starting retries
pod_run_retry: 300
# Pod starting retry delay
pod_run_retry_delay: 5
#############################################################################
# Enable ECP Enterprise version
ecp: true
#############################################################################
# Enable hybridjob
hybridjob: true
# Enable Offline install
offline: true
# Docker image tar files
src_image_tars_dir: "{{ playbook_dir }}/depends/image_tars"
# Image for all cluster nodes
cluster_image_tars_dir: "{{ src_image_tars_dir }}/cluster"
# Image for management nodes
management_image_tars_dir: "{{ src_image_tars_dir }}/management"
# Image for GlusterFS nodes
glusterfs_image_tars_dir: "{{ src_image_tars_dir }}/gluster"
# Image for Harbor node
harbor_image_tars_dir: "{{ src_image_tars_dir }}/harbor"
# Image for Appstore charts
charts_image_tars_dir: "{{ src_image_tars_dir }}/charts"
#############################################################################
# RPM files
src_rpms_dir: "{{ playbook_dir }}/depends/rpm"
kubernetes_rpms_dir: "{{ src_rpms_dir }}/kubernetes-1.9.5"
glusterfs_rpms_dir: "{{ src_rpms_dir }}/glusterfs"
nfs_client_rpms_dir: "{{ src_rpms_dir }}/nfs"
docker_rpms_dir: "{{ src_rpms_dir }}/docker-17.12.1-ce"
nvidia_docker_rpms_dir: "{{ src_rpms_dir }}/nvidia-docker"
rsync_rpms_dir: "{{ src_rpms_dir }}/rsync"
keepalived_rpms_dir: "{{ src_rpms_dir }}/keepalived"
#############################################################################
# Required RPM files for offline install:
# ---------------------------------------------------------------------------
# attr-2.4.46-12.el7.x86_64.rpm
# glusterfs-3.8.4-18.4.el7.centos.x86_64.rpm
# glusterfs-client-xlators-3.8.4-18.4.el7.centos.x86_64.rpm
# glusterfs-fuse-3.8.4-18.4.el7.centos.x86_64.rpm
# glusterfs-libs-3.8.4-18.4.el7.centos.x86_64.rpm
# kubeadm-1.9.5-0.x86_64.rpm
# kubectl-1.9.5-0.x86_64.rpm
# kubelet-1.9.5-0.x86_64.rpm
# kubernetes-cni-0.6.0-0.x86_64.rpm
# socat-1.7.3.2-2.el7.x86_64.rpm
#############################################################################
# By default, ECP uses internal storage: glusterfs
# If you want to use external NFS, make sure:
#   1. Set internal_glusterfs: false
#   2. Set existing NFS server shared directory "nfs_server_shared_dir"
# If you only have 1 master node, ECP will use host node's filesystem, make sure:
#   1. Set internal_glusterfs: false
#   2. Comment "nfs_server_shared_dir"
internal_glusterfs: true
gluster_ecp_volume_size: 30
ecp_share_dir: /ecp_share
nfs_server_shared_dir: 10.211.58.114:/var/nfsshare 
#############################################################################
# Upgrade k8s from 1.7.5 to 1.8.3
#k8s_upgrade_version: "v1.8.3"
#upgrade_yum_kubectl_version: 1.8.3-0
#upgrade_yum_kubelet_version: 1.8.3-0
#upgrade_yum_kubeadm_version: 1.8.3-0
#k8s_updrade_rpms_dir: "{{ src_rpms_dir }}/kubernetes-1.8.3"
